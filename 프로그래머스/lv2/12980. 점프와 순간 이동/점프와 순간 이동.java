import java.util.*;

public class Solution {
    public int solution(int n) {
        int ans = 0;
        
        /* 
        상향식으로 해결하려고 하면 점프할 분기를 정확히 찾아내기 어렵기 때문에 사실상 완전탐색과 다를 것이 없어진다.
        때문에 하향식으로 해결해야 하는데, 문제에서 순간이동은 이동한 거리의 두배까지 이동하므로 이동한 거리*2가 되는 것이다.
        이를 하향식에선 이동할 거리/2 로 나누어가면서 해결할 수 있는데, 여기서 나머지가 1이 발생하는 부분은 
        점프가 이루어진 분기임을 알아낼 수 있다.
        
        따라서 이는 나머지가 1이 나올 떄 ans++하는 것으로 건전지 사용량을 체크할 수 있고, 이진법 변환 후 1의 개수를 세는 것으로도 체크할
        수 있게 된다.
        */
        while(n != 0) {
            if(n%2 == 0) {
                n /= 2;
            }
            else {
                n = (n-1) / 2;
                ans++;
            }
        }
        return ans;
    }
}